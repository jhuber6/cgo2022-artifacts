#
# COMPILER = icpc | icx | gcc | nvc++ | clang (default)
# 
# VERSION = 0 | 1 | 2 | 3 | 4 | 5
ifndef VERSION
  VERSION=1
endif


DEFINES = -DUSE_OPENMP_CPU -DUSE_VERSION=$(VERSION)
DEPENDS = su3.hpp lattice.hpp mat_nn_openmp2.hpp

ifeq ($(COMPILER),icpc)
  CC = icpc
  CFLAGS = -O3
  CFLAGS += -qopenmp -qopenmp-offload=host
  #CFLAGS += -guide-vec
  #CFLAGS += -g -S -fsource-asm
  DEFINES += -DMILC_COMPLEX
else ifeq ($(COMPILER),icx)
  CC = icx
  CFLAGS = -O3 -ansi-alias -ipo -unroll -finline -qopt-zmm-usage=high
  CFLAGS += -fiopenmp
  DEFINES += -DMILC_COMPLEX
else ifeq ($(COMPILER),g++)
  CC = g++
  CFLAGS = -O3
  CFLAGS += -fopenmp
  DEFINES += -DMILC_COMPLEX
else ifeq ($(COMPILER),nvc++)
  CC = nvc++
  CFLAGS = -fast -mp=multicore -Minfo=accel,mp
  DEFINES += -DMILC_COMPLEX
else
  CC = clang++
  CFLAGS = -O3
  CFLAGS += -fopenmp
  DEFINES += -DMILC_COMPLEX
endif 

bench_f32_openmp.exe: su3_nn_bench.cpp $(DEPENDS)
	$(CC) $(CFLAGS) -DPRECISION=1 $(DEFINES) -o $@ su3_nn_bench.cpp $(LIBS)

bench_f64_openmp.exe: su3_nn_bench.cpp $(DEPENDS)
	$(CC) $(CFLAGS) $(DEFINES) -o $@ su3_nn_bench.cpp $(LIBS)

all: bench_f64_openmp.exe bench_f32_openmp.exe

clean:
	rm -f *openmp.exe
